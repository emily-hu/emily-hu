{"version":3,"sources":["components/Header.js","components/Selector.js","components/Card.js","components/Projects.js","components/Interests.js","components/Resume.js","components/Selectors.js","components/App.js","serviceWorker.js","index.js"],"names":["Header","className","Selector","select","props","onClick","id","this","isActive","text","React","Component","Card","imgid","title","desc","links","expand","Projects","state","active","setState","href","target","rel","Interests","Resume","src","Selectors","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.094e45be.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Header() {\r\n  return (\r\n    <div className=\"content\">\r\n        <div className=\"header\">\r\n            Hi, I'm Emily!\r\n        </div>\r\n        <div>\r\n            I'm a masters student at MIT, studying computer science.\r\n        </div>\r\n        <div>\r\n            Blah blah i say a lot more here, not really sure what else to include tho.\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport '../css/Selectors.css';\r\n\r\nclass Selector extends React.Component {\r\n  select = () => this.props.onClick(this.props.id);\r\n\r\n  render() {\r\n    return (\r\n      <div id={\"select-\" + this.props.id} onClick={this.select}\r\n          className={\"selector\" + (this.props.isActive ? \" selected\" : \"\")}>\r\n        <div className=\"circle\">\r\n          <div className=\"header2\">{this.props.text}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Selector;\r\n","import React from 'react';\r\nimport '../css/Content.css';\r\n\r\nclass Card extends React.Component {\r\n  select = () => this.props.onClick(this.props.id);\r\n  render() {\r\n    return (\r\n      <div className={\"card\" + (this.props.isActive ? \" active\" : \"\")} onClick={this.select}>\r\n        <div id={this.props.imgid} className=\"card-bg\">\r\n          <div className=\"header-overlay\">\r\n              <div className=\"header2\">{this.props.title}</div>\r\n              <div className=\"desc nested\">{this.props.desc}</div>\r\n              <div className={this.props.isActive ? \"expanded\" : \"minimized\"}>{this.props.links}</div>\r\n          </div>\r\n          <div className={\"more nested\" + (this.props.isActive ? \" expanded\" : \" minimized\")}>\r\n              {this.props.expand}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport '../css/Content.css';\r\nimport Card from './Card';\r\n\r\nclass Projects extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      active: -1,\r\n    };\r\n  }\r\n  select = (id) => {\r\n    if (id === this.state.active) {\r\n      this.setState({active:-1});\r\n    } else {\r\n      this.setState({active:id});\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"content2\">\r\n        <div>\r\n          <div>Currently I am...</div>\r\n          <br></br>\r\n          <div>working on my <i>Masters of Engineering thesis</i></div>\r\n        </div>\r\n        <div className=\"cards\">\r\n          <Card onClick={this.select} id={0} imgid=\"xya-img\" title=\"Project XYA\"\r\n            isActive={this.state.active===0}\r\n            desc=\"VR escape room. You wake up in an unfamiliar place... yeah it's one of those.\"\r\n            links={<div>See a <a href=\"https://youtu.be/6alKuRT0NOE\" target=\"_blank\" rel=\"noopener noreferrer\">demo</a></div>}\r\n            expand={<div>\r\n                        I worked on this project for a semester with two teammates.\r\n                        I learned to use Unity and VR at the same time,\r\n                        which partially inspired my current masters project.\r\n                    </div>\r\n              }/>\r\n          <Card onClick={this.select} id={1} imgid=\"xya-img\" title=\"Project XYA\"\r\n            isActive={this.state.active===1}\r\n            desc=\"VR escape room. You wake up in an unfamiliar place... yeah it's one of those.\"\r\n            links={<div>See a <a href=\"https://youtu.be/6alKuRT0NOE\" target=\"_blank\" rel=\"noopener noreferrer\">demo</a></div>}\r\n            expand={<div>\r\n                        I worked on this project for a semester with two teammates.\r\n                        I learned to use Unity and VR at the same time,\r\n                        which partially inspired my current masters project.\r\n                    </div>\r\n              }/>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Projects;\r\n","import React from 'react';\r\nimport '../css/Content.css';\r\nimport Card from './Card';\r\n\r\nclass Interests extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      active: -1,\r\n    };\r\n  }\r\n  select = (id) => {\r\n    if (id === this.state.active) {\r\n      this.setState({active:-1});\r\n    } else {\r\n      this.setState({active:id});\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"content2\">\r\n        <div>\r\n          <div>Currently I am...</div>\r\n          <br></br>\r\n          <div className=\"row-items\">\r\n            <div className=\"row-item\">playing <a href=\"http://www.okami-game.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Okami</a></div>\r\n            <div className=\"row-item\">reading <a href=\"https://en.wikipedia.org/wiki/The_Three-Body_Problem_(novel)\" target=\"_blank\" rel=\"noopener noreferrer\">The Three Body Problem</a></div>\r\n            <div className=\"row-item\">learning <i>French</i></div>\r\n          </div>\r\n          <div className=\"cards\">\r\n            <Card onClick={this.select} id={1} imgid=\"xya-img\" title=\"Project XYA\"\r\n              isActive={this.state.active===1}\r\n              desc=\"VR escape room. You wake up in an unfamiliar place... yeah it's one of those.\"\r\n              links={<div>See a <a href=\"https://youtu.be/6alKuRT0NOE\" target=\"_blank\" rel=\"noopener noreferrer\">demo</a></div>}\r\n              expand={<div className=\"white-text\">\r\n                          I worked on this project for a semester with two teammates.\r\n                          I learned to use Unity and VR at the same time,\r\n                          which partially inspired my current masters project.\r\n                      </div>\r\n                }/>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Interests;\r\n","import React from 'react';\r\n\r\nclass Resume extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"content2\">\r\n          <iframe className=\"embed\" title=\"resume\" src=\"resume.pdf\"/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Resume;\r\n","import React from 'react';\r\nimport '../css/Selectors.css';\r\nimport Selector from './Selector';\r\nimport Projects from './Projects';\r\nimport Interests from './Interests';\r\nimport Resume from './Resume';\r\n\r\nclass Selectors extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      active: 0,\r\n    };\r\n  }\r\n  select = (id) => {\r\n    this.setState({active:id});\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"content\">\r\n        <div className=\"row-items\">\r\n          <Selector text=\"Projects\" id={0} isActive={this.state.active===0} onClick={this.select}/>\r\n          <Selector text=\"Interests\" id={1} isActive={this.state.active===1} onClick={this.select}/>\r\n          <Selector text=\"Resume\" id={2} isActive={this.state.active===2} onClick={this.select}/>\r\n        </div>\r\n        <div className=\"content2\">\r\n          {this.state.active === 0 && <Projects/>}\r\n          {this.state.active === 1 && <Interests/>}\r\n          {this.state.active === 2 && <Resume/>}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Selectors;\r\n","import React from 'react';\n// import logo from '../logo.svg';\nimport '../css/App.css';\nimport Header from './Header'\nimport Selectors from './Selectors'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header/>\n      <Selectors/>\n      {/* <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header> */}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}